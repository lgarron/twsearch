all: package/src/generated/twsearch.mjs

.PHONY: emsdk
emsdk:
	mkdir -p emsdk
	cd emsdk && git clone https://github.com/emscripten-core/emsdk.git .
	./emsdk/emsdk install latest-upstream
	./emsdk/emsdk activate latest-upstream

# CXX = ./emsdk/upstream/emscripten/em++
CXX = em++
CXXFLAGS = -O3 -Wextra -Wall -pedantic -std=c++14 -g -march=native -Wsign-compare
FLAGS = -s ALLOW_MEMORY_GROWTH=1 -DHAVE_FFSLL -Isrc -Isrc/cityhash/src
LDFLAGS =

CSOURCE = src/antipode.cpp src/calcsymm.cpp src/canon.cpp src/cmdlineops.cpp \
   src/filtermoves.cpp src/findalgo.cpp src/generatingset.cpp src/god.cpp \
   src/index.cpp src/parsemoves.cpp src/prunetable.cpp src/puzdef.cpp \
   src/readksolve.cpp src/solve.cpp src/test.cpp src/threads.cpp \
   src/twsearch.cpp src/util.cpp src/workchunks.cpp src/rotations.cpp \
   src/orderedgs.cpp

HSOURCE = src/antipode.h src/calcsymm.h src/canon.h src/cmdlineops.h \
   src/filtermoves.h src/findalgo.h src/generatingset.h src/god.h src/index.h \
   src/parsemoves.h src/prunetable.h src/puzdef.h src/readksolve.h src/solve.h \
   src/test.h src/threads.h src/util.h src/workchunks.h src/rotations.h \
   src/orderedgs.h

CITYSRC = src/cityhash/src/city.cc

package/src/generated/twsearch.mjs: $(CSOURCE) $(HSOURCE)
	mkdir -p package/src/generated
	$(CXX) $(CXXFLAGS) $(FLAGS) -o $@.temp.mjs $(CSOURCE) $(CITYSRC) $(LDFLAGS)
	sed -i "" 's#^..*_scriptDir.*import.meta.url.*#var _scriptDir = "./"#' $@.temp.mjs
	sed -i "" 's#^var wasmBinaryFile =.*##' $@.temp.mjs
	sed -i "" 's#^if.*isDataURI.*wasmBinaryFile.*#if (false) {#' $@.temp.mjs
	echo 'import wasmBinaryFile from "url:./twsearch.wasm"' > $@
	cat $@.temp.mjs >> $@
	mv $@.temp.wasm package/src/generated/twsearch.wasm
	rm $@.temp.mjs

.PHONY: setup
setup:
	cd package && npm install

.PHONY: dev
dev: package/src/generated/twsearch.mjs
	cd package && npx parcel src/index.html

.PHONY: clean
clean:
	rm -rf ./package/src/generated/twsearch.mjs ./.cache ./.parcel-cache
